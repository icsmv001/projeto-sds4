package com.devsuperior.dsvendas.repositories;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.URI;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.List;
import java.util.Scanner;

import org.springframework.stereotype.Component;
import org.springframework.web.multipart.MultipartFile;
@Component
public class ReadFileRepository2 {
	
	
	
	public void ReadFile2(MultipartFile foto) {
	this.LerArq2(foto);
	}
	

	
	
//public void LerArq2(MultipartFile arquivo) {
	public void LerArq2(MultipartFile foto) {
		
		
		System.out.println( " 3 ate aqui  ok !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! ######################" );
		
		 int i;
		 // o código a seguir usa try-with-resources para abrir um arquivo
		 // e depois fechá-lo automaticamente quando o bloco try é deixado.
		// String Arq = ( foto.getOriginalFilename());
		 
		  
		 try (FileInputStream fin = new FileInputStream(foto.getOriginalFilename())) {
		 do {
		 i = fin.read();
		 if (i != -1) {
		 System.out.print((char) i);
		 }
		 } while (i != -1);
		 } catch (IOException ex) {
		 System.out.println(ex.getLocalizedMessage());
		 }
		 }
		
}



 
